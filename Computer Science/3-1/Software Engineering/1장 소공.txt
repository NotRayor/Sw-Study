소프트웨어 공학.

1. 소프트웨어의 정의는?
프로그램( 코딩 결과물 ) +  모든 산출물 ( 자료구조, DB구조, 테스트 결과 등 ) + 매뉴얼
>> 즉 프로그램 뿐만 아니라, 그 이상의 개념으로, 모든 과정의 산출물과 프로그램을 합친 것,
( 컴퓨터 시스템을 효율적 운영하기 위해 개발된 프로그램의 총칭 ) 

2. 소프트웨어의 종류,
관리 소프트웨어.
자료를 받아 가공한 후 정보를 제공하는 소프트웨어.
주로 DB에 자료를 저장한 후 사용자가 원하는 형태로 정보를 제공한다.
ex. 인터넷뱅킹시스템, 도서관대출시스템, 대학 종합정보시스템 등,

제어 소프트웨어
각종 센서를 제어하거나, 기기 동작을 제어하는 소프트웨어
ex. 교통신호제어, 의료기기제어, 아파트 정문 개폐제어, 원격 중장비제어 등..

임베디드 소프트웨어 Embedded Software 
장비나 기기에 내장된 소프트웨어,
ex. 가전제품내 소프트웨어, 각종 공정제어 시스템 내 소프트웨어

3. 하드웨어랑 소프트웨어의 비교!
제조가 아닌 개발,
제조 : 정해진 틀에 맞춰 생산, 개인의 능력에 따라 결과물 차이가 크지 않음,
개발 : 개인 능력에 의한 결과물 차이가 매우 크다.

소모되지 않는다.
HW 오래 사용하면 부품 닳고 기능이 떨어짐,
SW 오래 사용해도 닳지 않고, 기능이 유지된다.
하지만, 현실적으로는 지속되는 사용자 요구에 의해, 업데이트 되므로 빈번한 오류가 발생할 수 있다.

4. 소프트웨어 발전 저해 문제점,
하드웨어와 비교했을 때, 느린 소프트웨어 개발 발전속도..
HW는, 근래에 획기적으로 발전했찌만,
SW 발전 속도는, DOS ~ Windows 10 정도의 차이이다.

새로운 소프트웨어에 대한 사용자 요구 증가,
SW발전속도가 못따라감..
이유,  
HW,SW의 근본적인 생산 방법의 차이
 HW 검증 받은 부품을 조립하는 형태 생산,
 SW 처음부터 만들어가는 개발 형태,
 >> 해결 방안 CBD개발 방법론 ( 객체지향적 방법론, 우리도 HW생산 방법을 본받아 객체별로 나눠서 부품처럼 조립.. 즉 재사용하자 )

SW 개발에도 관리가 필요하다.
비용관리, 일정관리, 개발자 관리등.. 해결을 위해 PMBOK활용하는 프로젝트 관리필요,
PMBOK ( 국제 소프트웨어 표준 프로젝트 관리체계 ) 

5. 소프트웨어 개발의 어려움
작은 소프트웨어가 아닌, 대규모 소프트웨어 개발 시의 문제..
1) 개발 과정이 복잡해진다.
무엇이든지 복잡하면 문제가 발생하기 마련이고, 소프트웨어도 예외가 아니다.

2) 참여인력이 많다.
참여인력이 많아질수록, 의사결정, 협력 등이 어려워진다. 그래서, 팀을 효율적으로 관리하는 방법이 필요하다.

3) 개발기간이 길다.
개발기간이 길면, 진행사항 파악이 어렵고, 개발비용 산정도 어렵다.

이러한 이유로, 프로젝트 효율적 관리 진행을 위해 PMBOK(프로젝트관리지식체계)를 사용한다.


====
소프트웨어 공학의 이해

1. 공학과 소프트웨어 공학의 차이

공학이란?
과학적 지식을 활용하여 문제해결을 하는데, 주어진 시간과 비용에 제약이 있다.
즉 효율적인 방법으로 문제를 해결해야한다.

소프트웨어 공학,
소프트웨어 + 공학,
소프트웨어 개발 과정에 공학적인 원리를 적용하여, 소프트웨어를 개발한다.
 위에서 상기한 SW개발 어려움을 해결,
 효율적 개발을 통한 생산성 향상
 고품질 소프트웨어 제품 ( 오류가 없는 소프트웨어 ) 

2. 소프트웨어 개발 과정,
소프트웨어 개발 생명주기 ( SDLC ) 
DADCTM

Definition(정의 - 여기선 계획 )
개발비용을 산정한다.
일정계획을 세운다, WBS(분할공략법), 혹은 CPM (프로그램 개발 최소일 따지기) 사용,
위험 관리

Analyze (분석)
타당성 파악 - 요구사항을 주어진 자원으로 할 수 있다 없다를 검토,
문제점 파악 - 새로운 요구사항을 다이어그램으로 작성한다.
 파악 방법들, 
	개발방법론
	구조적방법론 DFD
	정보공학 방법론 ER다이어그램
	객체지향 방법론 UML
 최종산출물 - 요구사항 명세서

Design ( 설계 )
설계원리 - 분할정복, 추상화, 모듈화, 정보은닉
아키텍쳐, GoF 디자인 패턴
응집도와 결합도로 모듈을 평가,

Coding ( 구현 )
프로그래밍, 코딩 규칙

Testing 
개발자, 사용자 시작에 따른 분류,
사용되는 목적 분류,
개발 단계에 따른 분류 등..

Maintenance 유지보수
수정 유지보수,
적응 유지보수
....









